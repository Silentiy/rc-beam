# Generated by Django 4.1.1 on 2022-10-02 21:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=32, unique=True)),
                ('snow_region', models.SmallIntegerField(null=True)),
                ('snow_region_2011', models.SmallIntegerField(null=True)),
                ('wind_region', models.SmallIntegerField(null=True)),
                ('average_january_temp', models.SmallIntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Concrete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concrete_class', models.CharField(max_length=5, unique=True)),
                ('R_b_n', models.FloatField()),
                ('R_bt_n', models.FloatField()),
                ('R_b', models.FloatField()),
                ('R_bt', models.FloatField()),
                ('E_b', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ConcreteCreepCoefficient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concrete_class', models.CharField(max_length=5, unique=True)),
                ('creep_for_humidity_high', models.FloatField()),
                ('creep_for_humidity_normal', models.FloatField()),
                ('creep_for_humidity_low', models.FloatField()),
            ],
            options={
                'db_table': 'autograder_concrete_creep_coefficient',
            },
        ),
        migrations.CreateModel(
            name='CraneParameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_width', models.SmallIntegerField()),
                ('crane_capacity', models.FloatField()),
                ('crane_full_length', models.FloatField()),
                ('crane_span', models.SmallIntegerField()),
                ('crane_cantilevers_length', models.FloatField()),
                ('crane_left_hook_indent', models.FloatField()),
                ('crane_right_hook_indent', models.FloatField()),
                ('crane_trolleys_base', models.FloatField()),
                ('crane_height_to_topmost_hook_position', models.FloatField()),
                ('crane_weight', models.FloatField()),
                ('crane_max_reaction', models.FloatField()),
                ('crane_min_reaction', models.FloatField()),
            ],
            options={
                'db_table': 'autograder_crane_parameters',
            },
        ),
        migrations.CreateModel(
            name='CraneSupports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frames_spacing', models.SmallIntegerField()),
                ('crane_span', models.SmallIntegerField()),
                ('crane_capacity', models.FloatField()),
                ('crane_support_height', models.FloatField()),
                ('crane_support_meter_mass', models.FloatField()),
                ('beam_name', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'autograder_crane_supports',
            },
        ),
        migrations.CreateModel(
            name='FloorLayers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('layer_name', models.CharField(max_length=42, unique=True)),
                ('layer_density', models.SmallIntegerField(null=True)),
                ('layer_distributed_weight', models.FloatField(null=True)),
            ],
            options={
                'db_table': 'autograder_floor_layers',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_year', models.PositiveSmallIntegerField()),
                ('group_name', models.CharField(max_length=12, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reinforcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reinforcement_class', models.CharField(max_length=8)),
                ('possible_diameters', models.CharField(max_length=20)),
                ('R_s_ser', models.PositiveSmallIntegerField()),
                ('R_s', models.PositiveSmallIntegerField()),
                ('R_sc_l', models.PositiveSmallIntegerField()),
                ('R_sc_sh', models.PositiveSmallIntegerField()),
                ('R_sw', models.PositiveSmallIntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReinforcementBarsDiameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diameter', models.SmallIntegerField(unique=True)),
                ('cross_section_area', models.FloatField()),
                ('meter_mass', models.FloatField()),
            ],
            options={
                'db_table': 'autograder_reinforcement_bars_diameters',
            },
        ),
        migrations.CreateModel(
            name='ReinforcementStrands1500Diameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diameter', models.FloatField()),
                ('cross_section_area', models.FloatField()),
                ('meter_mass', models.FloatField()),
            ],
            options={
                'db_table': 'autograder_reinforcement_strands_1500_diameters',
            },
        ),
        migrations.CreateModel(
            name='ReinforcementStrands16001700Diameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diameter', models.FloatField()),
                ('cross_section_area', models.FloatField()),
                ('meter_mass', models.FloatField()),
            ],
            options={
                'db_table': 'autograder_reinforcement_strands_1600_1700_diameters',
            },
        ),
        migrations.CreateModel(
            name='ReinforcementStrandsCrimpedDiameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diameter', models.FloatField()),
                ('cross_section_area', models.FloatField()),
                ('meter_mass', models.FloatField()),
            ],
            options={
                'db_table': 'autograder_reinforcement_strands_crimped_diameters',
            },
        ),
        migrations.CreateModel(
            name='ReinforcementStrandsGeneralDiameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diameter', models.FloatField()),
                ('cross_section_area', models.FloatField()),
                ('meter_mass', models.FloatField()),
            ],
            options={
                'db_table': 'autograder_reinforcement_strands_general_diameters',
            },
        ),
        migrations.CreateModel(
            name='ReinforcementWiresDiameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diameter', models.SmallIntegerField()),
                ('cross_section_area', models.FloatField()),
                ('meter_mass', models.FloatField()),
            ],
            options={
                'db_table': 'autograder_reinforcement_wires_diameters',
            },
        ),
        migrations.CreateModel(
            name='RoofLayers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('layer_name', models.CharField(max_length=42, unique=True)),
                ('layer_density', models.SmallIntegerField(null=True)),
                ('layer_distributed_weight', models.FloatField(null=True)),
            ],
            options={
                'db_table': 'autograder_roof_layers',
            },
        ),
        migrations.CreateModel(
            name='SlabReferenceGeometry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nominal_length', models.SmallIntegerField()),
                ('nominal_width', models.SmallIntegerField()),
                ('nominal_height', models.SmallIntegerField()),
                ('load_greater_than', models.SmallIntegerField()),
                ('load_less_than', models.SmallIntegerField()),
                ('slab_fact_width_bottom', models.SmallIntegerField()),
                ('slab_fact_width_top', models.SmallIntegerField()),
                ('longitudinal_rib_width_bottom', models.SmallIntegerField()),
                ('longitudinal_rib_width_top', models.SmallIntegerField()),
                ('flange_height', models.SmallIntegerField()),
                ('transverse_rib_outer_width_bottom', models.SmallIntegerField()),
                ('transverse_rib_usual_height', models.SmallIntegerField()),
                ('transverse_rib_outer_width_top', models.SmallIntegerField()),
                ('transverse_rib_usual_width_bottom', models.SmallIntegerField()),
                ('transverse_rib_usual_width_top', models.SmallIntegerField()),
                ('transverse_ribs_spacing', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'autograder_slab_reference_geometry',
            },
        ),
        migrations.CreateModel(
            name='SnowLoads',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snow_region', models.SmallIntegerField()),
                ('snow_load', models.FloatField()),
            ],
            options={
                'db_table': 'autograder_snow_loads',
            },
        ),
        migrations.CreateModel(
            name='TrussName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('truss_type', models.CharField(max_length=3)),
                ('frames_spacing', models.SmallIntegerField()),
                ('load_greater_than', models.SmallIntegerField()),
                ('load_less_than', models.SmallIntegerField()),
                ('truss_span', models.SmallIntegerField()),
                ('truss_name', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'autograder_truss_name',
            },
        ),
        migrations.CreateModel(
            name='TrussParameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('truss_name', models.CharField(max_length=6)),
                ('truss_length', models.SmallIntegerField()),
                ('truss_height', models.SmallIntegerField()),
                ('truss_mass', models.FloatField()),
                ('truss_width', models.SmallIntegerField()),
                ('top_chord_cross_section_height', models.SmallIntegerField()),
                ('bottom_chord_cross_section_height', models.SmallIntegerField()),
                ('bracing_elements_cross_section_height', models.SmallIntegerField()),
                ('bracing_elements_cross_section_height_extra', models.SmallIntegerField()),
                ('bearing_knot_height', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'autograder_truss_parameters',
            },
        ),
        migrations.CreateModel(
            name='WindKCoefficient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_height_z_e', models.SmallIntegerField()),
                ('coeff_for_A_terrain', models.FloatField()),
                ('coeff_for_B_terrain', models.FloatField()),
                ('coeff_for_C_terrain', models.FloatField()),
            ],
            options={
                'db_table': 'autograder_wind_k_coefficient',
            },
        ),
        migrations.CreateModel(
            name='WindLoads',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wind_region', models.SmallIntegerField()),
                ('wind_load', models.FloatField()),
            ],
            options={
                'db_table': 'autograder_wind_loads',
            },
        ),
        migrations.CreateModel(
            name='VariantInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variant_number', models.SmallIntegerField()),
                ('num_of_floors', models.SmallIntegerField()),
                ('floor_height', models.FloatField()),
                ('building_length', models.SmallIntegerField()),
                ('building_width', models.SmallIntegerField()),
                ('crane_height', models.FloatField(null=True)),
                ('crane_capacity', models.FloatField(null=True)),
                ('girder_length', models.SmallIntegerField()),
                ('girder_type', models.CharField(max_length=18)),
                ('frames_spacing', models.SmallIntegerField()),
                ('roof_slab_width', models.FloatField()),
                ('top_slab_width', models.FloatField()),
                ('usual_slab_width', models.FloatField()),
                ('roof_load_full', models.SmallIntegerField()),
                ('roof_load_long', models.SmallIntegerField()),
                ('top_floor_load_full', models.SmallIntegerField()),
                ('top_floor_load_long', models.SmallIntegerField()),
                ('usual_floor_load_full', models.SmallIntegerField()),
                ('usual_floor_load_long', models.SmallIntegerField()),
                ('roof_layer_1_thickness', models.SmallIntegerField(null=True)),
                ('roof_layer_2_thickness', models.SmallIntegerField(null=True)),
                ('roof_layer_3_thickness', models.SmallIntegerField(null=True)),
                ('roof_layer_4_thickness', models.SmallIntegerField(null=True)),
                ('roof_layer_5_thickness', models.SmallIntegerField(null=True)),
                ('floor_layer_1_thickness', models.SmallIntegerField(null=True)),
                ('floor_layer_2_thickness', models.SmallIntegerField(null=True)),
                ('floor_layer_3_thickness', models.SmallIntegerField(null=True)),
                ('floor_layer_4_thickness', models.SmallIntegerField(null=True)),
                ('floor_layer_5_thickness', models.SmallIntegerField(null=True)),
                ('ground_natural', models.FloatField()),
                ('ground_unnatural', models.FloatField()),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='autograder.cities')),
                ('column_concrete', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='column_concrete', to='autograder.concrete')),
                ('column_reinforcement', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='column_reinforcement', to='autograder.reinforcement')),
                ('floor_layer_1', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='floor_layer_1', to='autograder.floorlayers')),
                ('floor_layer_2', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='floor_layer_2', to='autograder.floorlayers')),
                ('floor_layer_3', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='floor_layer_3', to='autograder.floorlayers')),
                ('floor_layer_4', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='floor_layer_4', to='autograder.floorlayers')),
                ('floor_layer_5', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='floor_layer_5', to='autograder.floorlayers')),
                ('foundation_concrete', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='foundation_concrete', to='autograder.concrete')),
                ('foundation_reinforcement', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='foundation_reinforcement', to='autograder.reinforcement')),
                ('girder_concrete', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='girder_concrete', to='autograder.concrete')),
                ('girder_reinforcement', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='girder_reinforcement', to='autograder.reinforcement')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='autograder.group')),
                ('roof_layer_1', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='roof_layer_1', to='autograder.rooflayers')),
                ('roof_layer_2', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='roof_layer_2', to='autograder.rooflayers')),
                ('roof_layer_3', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='roof_layer_3', to='autograder.rooflayers')),
                ('roof_layer_4', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='roof_layer_4', to='autograder.rooflayers')),
                ('roof_layer_5', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='roof_layer_5', to='autograder.rooflayers')),
                ('roof_slab_concrete', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='roof_slab_concrete', to='autograder.concrete')),
                ('roof_slab_pt_reinforcement', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='roof_slab_pt_reinforcement', to='autograder.reinforcement')),
                ('roof_slab_reinforcement', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='roof_slab_reinforcement', to='autograder.reinforcement')),
                ('top_slab_concrete', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='top_slab_concrete', to='autograder.concrete')),
                ('top_slab_pt_reinforcement', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='top_slab_pt_reinforcement', to='autograder.reinforcement')),
                ('top_slab_reinforcement', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='top_slab_reinforcement', to='autograder.reinforcement')),
                ('truss_concrete', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='truss_concrete', to='autograder.concrete')),
                ('truss_pt_reinforcement', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='truss_pt_reinforcement', to='autograder.reinforcement')),
                ('truss_reinforcement', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='truss_reinforcement', to='autograder.reinforcement')),
                ('usual_slab_concrete', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='usual_slab_concrete', to='autograder.concrete')),
                ('usual_slab_pt_reinforcement', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='usual_slab_pt_reinforcement', to='autograder.reinforcement')),
                ('usual_slab_reinforcement', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='usual_slab_reinforcement', to='autograder.reinforcement')),
            ],
            options={
                'db_table': 'autograder_variant_info',
                'unique_together': {('group', 'variant_number')},
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(help_text='Family name, given name, patronymic (if acceptable)', max_length=300)),
                ('subgroup_variant_number', models.PositiveSmallIntegerField()),
                ('personal_variant_number', models.PositiveSmallIntegerField()),
                ('preferred_freefall_acceleration', models.FloatField(default=10)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='autograder.group')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('group', 'subgroup_variant_number', 'personal_variant_number')},
            },
        ),
    ]
